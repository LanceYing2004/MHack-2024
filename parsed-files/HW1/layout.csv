'Page number,'Layout,'Text,'Reading Order,'Confidence score % (Layout)
'1,'Header 1,"'9/3/24, 8:53 PM",'0,'92.13867188
'1,'Header 2,"'pl-stats",'1,'82.61718750
'1,'Header 3,"'p1-stats",'2,'58.78906250
'1,'Title 1,"'EECS 280 Project 1: Statistics",'3,'65.82031250
'1,'Text 1,"'Due 8pm ET Fri Sep 13, 2024. This is an individual project.",'4,'87.74414063
'1,'Text 2,"'Fall 2024 release.",'5,'74.02343750
'1,'Figure 1,"",'6,'87.40234375
'1,'Text 3,"'i IMPORTANT If you are retaking the course, please note the project has changed significantly this term. While we always suggest students retaking the course redo the entire project from scratch (as it is helpful practice), we nevertheless want to emphasize you must work from a fresh set of starter files.",'7,'97.07031250
'1,'Section header 1,"'Introduction",'8,'93.65234375
'1,'Text 4,"'Statistical analysis is a key tool in many fields, from the natural and medical sciences to social sciences and business. It's used to summarize data, make inferences about populations, and test hypotheses. The intersection of statistical analysis and computation also underlies many emerging fields like machine learning and data science.",'9,'95.84960938
'1,'Text 5,"'In this project, you'll implement a program that computes descriptive statistics and performs two- sample analysis on a given data set.",'10,'89.35546875
'1,'Text 6,"'For example, consider data from How Couples Meet and Stay Together (HCMST), a study of how Americans meet their spouses and romantic partners. We can investigate the age ( ppage ) of survey respondents depending on whether or not they met their partner online ( q24_met_online).",'11,'91.55273438
'1,'Text 7,"'As shown below, our program displays descriptive statistics for respondents' age in the two groups. It also runs a 95% confidence interval procedure for the difference in means between the groups, meaning there is a 95% chance the interval computed from the sample contains the true value of the difference in means among the overall population. Overall, we can be reasonbly confident the mean age of people who met their partner online is several years younger than those who did not.",'12,'95.45898438
'1,'Text 8,"'$ /two_sample.exe HCMST_ver_3.04.tsv q24_met_online 1 O ppage reading column q24_met_online from HCMST_ver_3.04.tsv reading column ppage from HCMST_ver_3.04.tsv Group A: ppage | q24_met_online = 1",'13,'75.14648438
'1,'Footer 1,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.html",'14,'85.54687500
'1,'Page number 1,"'1/19",'15,'76.07421875
'2,'Header 4,"'9/3/24, 8:53 PM",'16,'89.30664063
'2,'Header 5,"'pl-stats",'17,'63.18359375
'2,'Text 9,"'count = 270 sum = 10687 mean = 39.5815 stdev = 12.2103 median = 40.5 min = 19 max = 86 0th percentile = 19 25th percentile = 29 50th percentile = 40. 5 75th percentile = 49 100th percentile = 86 Group B : ppage q24_met online = O count = 2664 sum = 125721 mean = 47. 1926 stdev = 16. 1446 median = 46 min = 19 max = 95 0th percentile = 19 25th percentile = 35 50th percentile = 46 75th percentile = 58 100th percentile = 95 Confidence interval for mean ( (ppage | A) - mean (ppage B) : 95% [ (-9.31595, -6.05068]",'18,'35.66894531
'2,'Section header 2,"'Learning Goals",'19,'63.96484375
'2,'Text 10,"'The learning goals of this project include C++ fundamentals, control-flow structures, vectors, procedural abstraction, and unit testing. It's also a chance to get used to the C++ toolchain and review your 100-level programming skills. No prior knowledge of probability or statistics is required or expected for this project.",'20,'97.50976563
'2,'Section header 3,"'Setup",'21,'57.66601563
'2,'Text 11,"'Set up your project in your visual debugger. We recommend VS Code because it's easier to use. Many people use Visual Studio (Windows) or XCode (macOS).",'22,'94.62890625
'2,'Footer 2,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.htm",'23,'78.32031250
'2,'Page number 2,"'2/19",'24,'83.05664063
'3,'Header 6,"'9/3/24, 8:53 PM",'25,'68.75000000
'3,'Header 7,"'pl-stats",'26,'40.91796875
'3,'Text 12,"'During setup, name your project p1-stats . Use this starter files link: :tps://eecs280staff.github.io/p1-stats/starter-files.tar.gz",'27,'80.56640625
'3,'Text 13,"'VS Code Tutorial (recommended)",'28,'89.89257813
'3,'Text 14,"'Visual Studio Tutorial",'29,'91.55273438
'3,'Text 15,"'Xcode Tutorial",'30,'87.40234375
'3,'Text 16,"'If you created a main.cpp while following the setup tutorial, delete it. You'll use the provided starter code for two_sample.cpp instead. You should end up with a folder with starter files that looks like this. (You may have already renamed files like two_sample.cpp.starter to two_sample.cpp .)",'31,'94.87304688
'3,'List 1,"",'32,'25.04882813
'3,'Text 17 - Part of List 1,"'$ ls Makefile cats.csv cats.out.correct stats.hpp",'33,'60.30273438
'3,'Text 18 - Part of List 1,"'p1_library.cpp stats_public_tests.cpp p1_library.hp stats_tests.cpp.starter two_sample.cpp.starter",'34,'57.37304688
'3,'Text 19,"'Here's a short description of each file in this project.",'35,'66.01562500
'3,'Table 1,"",'36,'95.89843750
'3,'Figure 2,"",'37,'48.82812500
'3,'Text 20,"'Pitfall: Make sure you have set up your visual debugger before continuing.",'38,'93.06640625
'3,'Text 21,"'VS Code Tutorial (recommended)",'39,'96.38671875
'3,'Text 22,"'Visual Studio Tutorial",'40,'96.82617188
'3,'Text 23,"'Xcode Tutorial",'41,'95.55664063
'3,'Text 24,"'Statistics Background",'42,'36.30371094
'3,'Footer 3,"'file:///home/runner/work/p1-stats/pl-stats/_site/index.html",'43,'85.49804688
'3,'Page number 3,"'3/19",'44,'73.04687500
'4,'Header 8,"'9/3/24, 8:53 PM",'45,'84.91210938
'4,'Header 9,"'pl-stats",'46,'71.14257813
'4,'Text 25,"'This section provides an introduction to the statistical analyses you'll implement in this project.",'47,'78.61328125
'4,'Section header 4,"'Descriptive Statistics",'48,'76.36718750
'4,'Text 26,"'Descriptive statistics are computed properties that quantitatively summarize the underlying distribution of measured data. For example, the mean of a data set is a measure of its central tendency whereas the standard deviation measures how spread out the data are. Details of several descriptive statistics are given in the Statistics Functions section below.",'49,'97.21679688
'4,'Section header 5,"'Sampling",'50,'94.67773438
'4,'Text 27,"'We often estimate qualities of a large population by measurement of a relatively small sample. For instance, we might want to know how many US residents are currently in a relationship, the distribution of age among these people, and whether they met their partner online or in-person. Rather than ask over 300 million people these questions, we might survey a subset of a few thousand people.",'51,'96.67968750
'4,'Text 28,"'There are many essential considerations for proper survey procedure. For example, obtaining a random, unbiased sample of survey participants is important to ensure the sample is representative of the overall population. On the other hand, special attention (e.g. oversampling) may be needed to ensure underrepresented groups are not marginalized. Survey designers should mitigate potential threats to validity such as response bias (e.g. survey answers may be affected by perceived social desirability of answers). These considerations are important, but beyond the scope of this project.",'52,'97.02148438
'4,'Section header 6,"'Two-Sample Analysis",'53,'91.45507813
'4,'Text 29,"'We may also want to compare two different samples via statistical analysis and make inferences about the underlying populations they represent. We might survey different populations entirely separately, or partition a data set into subgroups based on specific criteria. For example, we might filter responses to the HCMST survey based on whether people met their partner online or not, yielding two samples representing distinct populations. Then, we could compute the mean age for each sample, as well as the difference between those means, finding that to be approximately 7.6 years older for the sample of people who did not meet their partner online.",'54,'97.26562500
'4,'Text 30,"'However, inferences drawn from samples must be qualified in a way that accounts for the probability the observed difference is due to random chance (i.e. the uncertainty introduced by sampling). It would not be responsible to simply report the 7.6 point estimate as the difference in means among the underlying populations.",'55,'96.58203125
'4,'Section header 7,"'Bootstrap Confidence Intervals",'56,'54.49218750
'4,'Footer 4,"'file:///home/runner/work/pl-stats/pl-stats/_site/index.htm",'57,'87.93945313
'4,'Page number 4,"'4/19",'58,'69.33593750
'5,'Header 10,"'9/3/24, 8:53 PM",'59,'84.71679688
'5,'Header 11,"'pl-stats",'60,'77.68554688
'5,'Text 31,"'Instead of reporting a single estimate based on a sample, we instead set up a procedure for computing a range of possible values (i.e. lower and upper bounds) defining a confidence interval at a particular confidence level of X%. The interpretation is as follows: If we collected many samples (i.e. ran the survey many times), X% of the time the computed confidence interval would contain the true underlying value among the population.",'61,'98.58398438
'5,'Text 32,"'Of course, it's not practical to actually conduct the survey many times, so we instead use an approach called bootstrap resampling. The essential idea is that we simulate taking several samples by instead re-sampling (with replacement) from one original sample.",'62,'97.02148438
'5,'Text 33,"'For example, assume the original sample contained individuals [A, B, C, D]. Bootstrap resamples of this could be [A, C, C, D] or [A, A, A, B]. Each approximates a plausible sample we could have drawn from the underlying population (i.e. a resample of [A, A, A, B] approximates a sample that happened to have more people like A and less like C or D).",'63,'96.24023438
'5,'Text 34,"'We can compute the statistic of interest (e.g. the difference in means) for many resamples to obtain an approximate sampling distribution from which we can compute a confidence interval.",'64,'94.48242188
'5,'Text 35,"'Let's apply this to our running example. We start with the original two samples of people who did or did not meet their partner online. Then, we repeat this process 1000 times:",'65,'95.80078125
'5,'List 2,"",'66,'97.46093750
'5,'Text 36 - Part of List 2,"'1. Generate a bootstrap resample for each of the two original samples.",'67,'98.43750000
'5,'Text 37 - Part of List 2,"'2. Compute the difference in means between the two resamples.",'68,'97.85156250
'5,'Text 38 - Part of List 2,"'3. Record the computed value.",'69,'97.90039063
'5,'Text 39,"'Finally, we determine the range containing the middle 95% of the values computed via resampling and report this as the 95% confidence interval.",'70,'96.04492188
'5,'Text 40,"'The starter code for two_sample.cpp provides much of the overall structure for computing bootstrap confidence intervals and includes comments to guide you through implementing the rest.",'71,'95.70312500
'5,'Text 41,"'You might also find this video on bootstrapping helpful, which covers the same basic ideas described above. While there are many approaches to find confidence intervals, we chose bootstrapping for this project due to its uniquely computational approach that is well-suited for a programming project.",'72,'96.28906250
'5,'Section header 8,"'Statistics Library",'73,'79.88281250
'5,'Text 42,"'The stats. hpp file specifies a general-purpose statistics library, including declarations and RME interface specifications of several functions for computing descriptive statistics and filtering data. You'll write implementations for each of these functions in stats. cpp",'74,'95.11718750
'5,'Footer 5,"'file:///home/runner/work/p1-stats/pl-stats/_site/index.htm",'75,'89.06250000
'5,'Page number 5,"'5/19",'76,'72.80273438
'6,'Text 43,"'9/3/24, 8:53 PM",'77,'40.91796875
'6,'Header 12,"'pl-stats",'78,'51.75781250
'6,'Text 44,"'The data sets are stored as a std: : vector<double> If you haven't used vectors in C++ before, check out our Vector Reference. C++ vectors are similar to Java ArrayLists, Javascript arrays, and Python lists.",'79,'71.63085938
'6,'Section header 9,"'Setup",'80,'48.53515625
'6,'Text 45,"'Rename these files (VS Code (macOS), VS Code (Windows), Visual Studio, Xcode, CLI):",'81,'81.68945313
'6,'Text 46,"'stats_tests.cpp.starter -> stats_tests.cpp",'82,'64.06250000
'6,'Text 47,"'Add a new file stats.cpp containing a ""function stub"" for each prototype in stats. hpp , as shown below. Adding stubs ensures the program can compile, even though not everything is finished yet. The assert (false) ; in each is a placeholder that triggers an error if an unfinished function were to run - you should remove them once you implement each function.",'83,'96.67968750
'6,'Section header 10,"'stats.cpp",'84,'44.16503906
'6,'Table 2,"",'85,'41.67480469
'6,'Text 48,"'2",'86,'93.94531250
'6,'Text 49,"'5",'87,'96.87500000
'6,'Text 50,"'6",'88,'96.14257813
'6,'Text 51,"'7",'89,'96.92382813
'6,'Text 52,"'8",'90,'96.63085938
'6,'Text 53,"'9",'91,'95.80078125
'6,'Text 54,"'10",'92,'97.65625000
'6,'Text 55,"'12",'93,'96.28906250
'6,'Text 56,"'13",'94,'97.11914063
'6,'Text 57,"'15",'95,'94.33593750
'6,'Text 58,"'16",'96,'96.67968750
'6,'Text 59,"'17",'97,'95.89843750
'6,'Text 60,"'20",'98,'96.58203125
'6,'Text 61,"'21",'99,'94.14062500
'6,'Text 62,"'24",'100,'93.75000000
'6,'Text 63,"'25",'101,'94.43359375
'6,'Footer 6,"'file:///home/runner/work/p1-stats/p1-stats/_site/index.html",'102,'74.07226563
'6,'Page number 6,"'6/19",'103,'47.16796875
'7,'Header 13,"'9/3/24, 8:53 PM",'104,'56.10351563
'7,'Header 14,"'pl-stats",'105,'63.08593750
'7,'Text 64,"'28 }",'106,'50.03747940
'7,'Figure 3,"",'107,'56.29882813
'7,'Text 65,"'Once you've added the stubs, you can compile and run the public tests.",'108,'86.81640625
'7,'List 3,"",'109,'88.72070313
'7,'Text 66 - Part of List 3,"'1 $ make stats_public_tests.exe",'110,'96.82617188
'7,'Text 67 - Part of List 3,"'2 $ ./stats_public_tests.exe",'111,'96.09375000
'7,'Text 68,"'The tests should compile successfully but won't pass until you've implemented each function.",'112,'95.89843750
'7,'Figure 4,"",'113,'77.88085938
'7,'Text 69,"'! Pitfall: Do not include a main ( ) function in your stats.cpp file. Remember, stats.cpp is a library of functions that another module like two_sample.cpp will use.",'114,'94.43359375
'7,'Section header 11,"'Statistics Functions",'115,'88.96484375
'7,'Text 70,"'This section provides background for each statistical method and tips for implementation.",'116,'95.36132813
'7,'Section header 12,"'General Tips",'117,'75.78125000
'7,'Figure 5,"",'118,'39.13574219
'7,'List 4,"",'119,'46.97265625
'7,'Text 71 - Part of List 4,"'i Pro-tip: Your implementation of some functions may require sorting the input vector. You can use the std: : sort ( ) function from the <algorithm> library for this. Here's an example:",'120,'88.91601563
'7,'Text 72 - Part of List 4,"'1 vector <double> V; // assume V contains some data",'121,'85.10742188
'7,'Text 73 - Part of List 4,"'2 std: sort (v. begin (), v.end());",'122,'84.52148438
'7,'Footer 7,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.htm/",'123,'87.25585938
'7,'Page number 7,"'7/19",'124,'86.37695313
'8,'Header 15,"'9/3/24, 8:53 PM",'125,'77.78320313
'8,'Header 16,"'pl-stats",'126,'57.47070313
'8,'Figure 6,"",'127,'36.10839844
'8,'Text 74,"'Pitfall: If you're getting errors like this, check out the Comparisons tutorial.",'128,'63.08593750
'8,'Text 75,"'error: comparison between signed and unsigned integer expressions",'129,'70.99609375
'8,'Text 76,"'count () , , mean()",'130,'49.90234375
'8,'Text 77,"'The count ( ) function returns the number of values in a data set. The sum( function computes the sum of the values in a data set. The mean( function computes the arithmetic mean of a data set:",'131,'39.59960938
'8,'Figure 7,"",'132,'37.25585938
'8,'Text 78,"'Here, x denotes the mean, Xi denotes the value of the ith data point, and n is the sample size.",'133,'76.12304688
'8,'Figure 8,"",'134,'47.65625000
'8,'Text 79,"'Pro-tip: Call count ( ) and sum( ) as helper functions in your implementation of mean() .",'135,'66.55273438
'8,'Section header 13,"'median()",'136,'65.38085938
'8,'Text 80,"'Computes the median, which is the ""middle"" value in a data set. In other words, it is the value for which half the data points lie below the value, and half lie above it. If the number of data values N is odd, this is just the middle value when the data set is sorted. If the number of data values is even, then it is the average of the two values in the middle.",'137,'93.94531250
'8,'Text 81,"'min(),,max()",'138,'64.06250000
'8,'Text 82,"'These functions return the minimum and maximum values in the data set.",'139,'89.45312500
'8,'Section header 14,"'stdev()",'140,'41.96777344
'8,'Text 83,"'The stdev ( ) function computes the standard deviation, which is a measure of the ""spread"" among data values. For instance, while the data sets (2, 2, 2) and (1, 2,3) have the same mean of 2, the latter set has a higher standard deviation than the former one since the values are more spread apart. We specifically use the corrected sample standard deviation, which is defined as:",'141,'92.72460938
'8,'Footer 8,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.htm",'142,'89.16015625
'8,'Page number 8,"'8/19",'143,'65.33203125
'9,'Header 17,"'9/3/24, 8:53 PM",'144,'55.46875000
'9,'Figure 9,"",'145,'49.02343750
'9,'Figure 10,"",'146,'42.43164063
'9,'Text 84,"'Pitfall: Make sure that your code is doing floating-point rather than integer division.",'147,'76.61132813
'9,'Text 85,"'1 double X = 1 / 4; // integer division: X is O 2 double y =1.0/4; // floating-point division: y is 0.25",'148,'38.57421875
'9,'Text 86,"'When writing stdev() use the sqrt ( ) function, which calculates a square root.",'149,'91.35742188
'9,'List 5,"",'150,'65.82031250
'9,'Text 87 - Part of List 5,"'1 #include <cmath>",'151,'71.92382813
'9,'Text 88 - Part of List 5,"'2 //",'152,'55.66406250
'9,'Text 89 - Part of List 5,"'3 cout << ""the square root of 4 is "" << sqrt(4) << ""\n"";",'153,'54.68750000
'9,'Section header 15,"'percentile()",'154,'85.69335938
'9,'Text 90,"'A call to percentile( (data, p) computes the pth percentile for a fractional value 0<p<1, which is the threshold below which a portion p of the data occurs. For example, percentile(data, 0.3) returns the value below which 30% of the data occur.",'155,'95.11718750
'9,'Text 91,"'We use the percentile formula that is implemented in many software packages, which estimates the percentile Up for a fraction p as follows:",'156,'89.50195313
'9,'List 6,"",'157,'82.66601563
'9,'Text 92 - Part of List 6,"'1. Compute the rank, which is the approximate position in the (sorted) data set corresponding to the fraction:",'158,'82.03125000
'9,'Text 93 - Part of List 6,"'rank=p(n-1)+1,for 0 p1",'159,'46.38671875
'9,'Text 94 - Part of List 6,"'2. Split the rank into its integer and decimal components k and d respectively, so that",'160,'46.48437500
'9,'Text 95 - Part of List 6,"'rank = k + d, where k is an integer and 0<d<1",'161,'34.54589844
'9,'Text 96 - Part of List 6,"'3. Then the percentile Up is .kk where Vk is the kth data point from the sorted data set. Essentially, Up is the weighted average of the kth and (k+1)th data points in the sorted set, with the weight of each value determined",'162,'26.97753906
'9,'Footer 9,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.htm",'163,'89.74609375
'9,'Page number 9,"'9/19",'164,'87.98828125
'10,'Header 18,"'9/3/24, 8:53 PM",'165,'82.37304688
'10,'Header 19,"'pl-stats",'166,'76.07421875
'10,'Text 97,"'by the decimal component d: a weight of d for the (k+1)th value and a weight of 1-d for the kth value.",'167,'94.62890625
'10,'Figure 11,"",'168,'66.89453125
'10,'List 7,"",'169,'40.64941406
'10,'Text 98 - Part of List 7,"'Pro-tip: Use the modf ( ) function to break a double into its integral and fractional parts.",'170,'93.60351563
'10,'Text 99 - Part of List 7,"'1 #include <cmath>",'171,'95.89843750
'10,'Text 100 - Part of List 7,"'2 //",'172,'93.79882813
'10,'Text 101 - Part of List 7,"'3 double pi 3.14159265;",'173,'95.99609375
'10,'Text 102 - Part of List 7,"'4 double intpart = 0;",'174,'93.99414063
'10,'Text 103 - Part of List 7,"'5 double fractpart = O;",'175,'93.75000000
'10,'Text 104 - Part of List 7,"'6 fractpart = modf(pi, &intpart) ;",'176,'91.35742188
'10,'Text 105 - Part of List 7,"'7 // intpart is now 3, factpart is now 0.14159265",'177,'92.28515625
'10,'Figure 12,"",'178,'37.37792969
'10,'Text 106,"'! Pitfall: The formula here and the worked example below use indices that start with 1. You will need to adapt them for vector indexing, which starts at 0.",'179,'89.01367188
'10,'Figure 13,"",'180,'29.46777344
'10,'Text 107,"'! Pitfall: Consider an example dataset with 5 elements. For p=1, the above formula gives:",'181,'76.46484375
'10,'Text 108,"'This includes a nonexistent datapoint - V6! Mathematically, everything works out because it gets multiplied by 0. However, you must ensure your implementation code never even attempts to access out-of-bounds data, which can cause undefined behavior, including a program crash (regardless of whether it would be canceled out later in the formula).",'182,'88.96484375
'10,'Section header 16,"'Worked Example of Percentile Computation",'183,'72.70507813
'10,'Text 109,"'Suppose that our data set consists of the values 35, 20, 15, 50, 40. What is the 40th percentile from this data set?",'184,'95.06835938
'10,'Text 110,"'First, we sort the values to obtain the ordered sequence",'185,'81.68945313
'10,'Text 111,"'(V1, V2, V3, V4, V5)= = (15, 20, 35, 40,50)",'186,'28.10058594
'10,'Text 112,"'Then, we calculate the rank for p=0.4: rank = 0.4(5 - 1) + 1 = 2.6",'187,'27.00195313
'10,'Text 113,"'Splitting this into integer and decimal components, we have",'188,'75.43945313
'10,'Footer 10,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.htm",'189,'86.23046875
'10,'Page number 10,"'10/19",'190,'76.36718750
'11,'Header 20,"'9/3/24, 8:53 PM",'191,'62.98828125
'11,'Header 21,"'pl-stats rank=k+d=2+0.6",'192,'37.30468750
'11,'Text 114,"'We then calculate the percentile as",'193,'44.94628906
'11,'Text 115,"'- =",'194,'47.26562500
'11,'Text 116,"'Thus, the 40th percentile is 29.",'195,'53.80859375
'11,'Section header 17,"'filter ( )",'196,'80.37109375
'11,'Text 117,"'The filter ( ) function separates out the portion of a data set where some measured criterion has a particular value. For example:",'197,'86.27929688
'11,'List 8,"",'198,'37.93945313
'11,'Text 118 - Part of List 8,"'1 // Data set of temperatures measured at different locations.",'199,'37.37792969
'11,'Text 119 - Part of List 8,"'2 // e.g. the first measurement was at location O with temperature 15.5",'200,'33.44726563
'11,'Text 120 - Part of List 8,"'3",'201,'99.94055176
'11,'Text 121 - Part of List 8,"'vector<double> locations = {0, 1, 0, 1, 1, 2, 2, 0, 1};",'202,'99.78359222
'11,'Text 122 - Part of List 8,"'4 vector<double> temps = {15.5, 23.1, 7.8, 19.2, 22.6, 4.6, 1.9, 14.3, 18.0};",'203,'26.39160156
'11,'Text 123 - Part of List 8,"'5",'204,'99.95401764
'11,'Text 124 - Part of List 8,"'6",'205,'99.96826935
'11,'Text 125 - Part of List 8,"'// Filter to the temperature measurements at location 1",'206,'99.97360229
'11,'Text 126 - Part of List 8,"'7",'207,'99.87477112
'11,'Text 127 - Part of List 8,"'vector<double> temps_1 = filter (temps, locations, 1);",'208,'99.89507294
'11,'Text 128 - Part of List 8,"'8",'209,'99.85602570
'11,'Text 129 - Part of List 8,"'// temps_1 is {23.1, 19.2, 22.6, 18.0}",'210,'99.92900848
'11,'Section header 18,"'Testing",'211,'72.02148438
'11,'Text 130,"'There are two sets of unit tests for the stats module.",'212,'80.41992188
'11,'Section header 19,"'1. Public Tests in stats_public_tests.cpp",'213,'60.59570313
'11,'Text 131,"'A minimal set of public tests that we provide (and that match the ones on the autograder). Passing these is a good first target, but is generally not sufficient to ensure correctness. Compile and run the public stats tests with:",'214,'94.14062500
'11,'List 9,"",'215,'57.95898438
'11,'Text 132 - Part of List 9,"'1 $ make stats_public_tests.exe",'216,'66.45507813
'11,'Text 133 - Part of List 9,"'2 $ ./stats_public_tests.exe",'217,'54.10156250
'11,'Section header 20,"'2. Your Tests in stats_tests.cpp",'218,'80.41992188
'11,'Text 134,"'Write your own comprehensive set of unit tests in stats_tests.cpp for each of the statistics functions declared in stats.hpp . Use assert() to verify the results of the function are as expected when called on a variety of inputs, including any relevant special cases. Keep your tests organized by splitting them into separate helper functions, as in the provided example in the stats_tests.cpp starter file.",'219,'95.45898438
'11,'Text 135,"'Compile and run your tests with:",'220,'61.03515625
'11,'Text 136,"'1",'221,'99.79706573
'11,'Footer 11,"'$ make stats_tests.exe",'222,'41.47949219
'11,'Footer 12,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.html",'223,'75.92773438
'11,'Page number 11,"'11/19",'224,'51.07421875
'12,'Header 22,"'9/3/24, 8:53 PM",'225,'78.85742188
'12,'Header 23,"'pl-stats",'226,'64.89257813
'12,'Header 24,"'2 $ ./stats_tests.exe",'227,'54.10156250
'12,'Text 137,"'You will submit stats_tests.cpp to the autograder. You must write at least one test for each function in stats. hpp , but it's a good idea to write more. Generally speaking, your tests should not produce output to cout - the autograder will ignore such output, and you should use assert ( ) to verify expected behavior.",'228,'93.26171875
'12,'Figure 14,"",'229,'88.81835938
'12,'Text 138,"'! Pitfall: Due to rounding errors, two floating point numbers we expect to be equal may be slightly different. This might happen while testing stdev() Check out the Floating-point Comparisons tutorial.",'230,'96.28906250
'12,'Section header 21,"'Debugging",'231,'85.20507813
'12,'Text 139,"'Use your IDE's visual debugger for either the public tests or your own tests.",'232,'94.67773438
'12,'Text 140,"'For example, you might set a breakpoint in the unit test that is failing, before your function from stats.cpp is called. Then you can use the debugger to step into the function and see what's going wrong.",'233,'96.48437500
'12,'Text 141,"'Here's a reminder of how to configure the debugger to launch either the public tests or your own tests:",'234,'94.97070313
'12,'Table 3,"",'235,'93.40820313
'12,'Footer 13,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.html",'236,'84.22851563
'12,'Page number 12,"'12/19",'237,'77.34375000
'13,'Text 142,"'9/3/24, 8:53 PM",'238,'45.60546875
'13,'Text 143,"'pl-stats",'239,'53.71093750
'13,'Table 4,"",'240,'95.80078125
'13,'Section header 22,"'Submit",'241,'64.69726563
'13,'Text 144,"'Submit stats. cpp and stats_tests.cpp to the Autograder using the direct link in the Submission and Grading section.",'242,'93.50585938
'13,'Section header 23,"'Analysis Program",'243,'85.98632813
'13,'Text 145,"'Our statistical analysis program is run like this:",'244,'92.77343750
'13,'Text 146,"'$ ./two_sample.exe HCMST_ver_3.04.tsv q24_met_online 1 O ppage",'245,'83.49609375
'13,'Text 147,"'It takes command-line arguments for the data file name ( HCMST_ver_3.04.tsv), a filter column name ( q24_met_online), filter A/B values ( O and 1), and a data column name to analyze ( ppage ).",'246,'94.14062500
'13,'Text 148,"'When run, it reads data from the specified file and columns and splits into groups on the filter column and A/B values. Then, it prints descriptive statistics for the data column on each group, as well as a 95% confidence interval for the difference in means between the two groups.",'247,'91.69921875
'13,'Text 149,"'The program may also be run for testing purposes with no command-line arguments provided:",'248,'59.61914063
'13,'Text 150,"'$ ./two_sample.exe",'249,'53.90625000
'13,'Footer 14,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.html",'250,'86.37695313
'13,'Page number 13,"'13/19",'251,'62.45117188
'14,'Header 25,"'9/3/24, 8:53 PM",'252,'58.15429688
'14,'Header 26,"'pl-stats",'253,'51.95312500
'14,'Text 151,"'In this case, the program uses default arguments of cats.csv , food 1, 2, and weight , performing an analysis of the weights of cats in the provided cats.csv sample data set according to which brand of cat food (i.e. #1 or #2) they eat.",'254,'88.57421875
'14,'Section header 24,"'Setup",'255,'70.31250000
'14,'Text 152,"'Rename these files (VS Code (macOS), VS Code (Windows), Visual Studio, Xcode, CLI):",'256,'89.20898438
'14,'Text 153,"'two_sample.cpp.starter -> two_sample.cpp",'257,'68.06640625
'14,'Figure 15,"",'258,'26.22070313
'14,'Text 154,"'If you created a main. cpp while following the setup tutorial, you should delete it.",'259,'91.94335938
'14,'Section header 25,"'Data Sets",'260,'79.44335938
'14,'Text 155,"'The analysis program can be run with any input data file in a standard delimited format (e.g. a CSV comma-separated value file or .tsv tab-separated value file) with a header row containing column names.",'261,'96.87500000
'14,'Section header 26,"'Sample Data Set: Cats",'262,'91.50390625
'14,'Text 156,"'We've provided a small data set in cats.csv for testing purposes:",'263,'91.60156250
'14,'List 10,"",'264,'70.41015625
'14,'Text 157 - Part of List 10,"'1 name, food, weight",'265,'85.74218750
'14,'Text 158 - Part of List 10,"'2 Fluffy, 1, 9.6",'266,'90.57617188
'14,'Text 159 - Part of List 10,"'3 Socks, 1, 11.5",'267,'93.65234375
'14,'Text 160 - Part of List 10,"'4 Mittens, 1, 9.9",'268,'96.04492188
'14,'Text 161 - Part of List 10,"'5 Felix, 1,10.1",'269,'96.19140625
'14,'Text 162 - Part of List 10,"'6 Luna, 1, 11.2",'270,'95.45898438
'14,'Text 163 - Part of List 10,"'7 Simba, 2, 9.2",'271,'96.33789063
'14,'Text 164 - Part of List 10,"'8 Nala, 2, 7.8",'272,'94.09179688
'14,'Text 165 - Part of List 10,"'9 Oliver, 2, 12.3",'273,'95.01953125
'14,'Text 166 - Part of List 10,"'10 Bella, 2, 10.1",'274,'94.48242188
'14,'Text 167 - Part of List 10,"'11 Milo, 2, 10.9",'275,'94.14062500
'14,'Text 168,"'When the program is run without command-line arguments, it defaults to use this data set, analyzing the weights of group A (fed food #1) and group B (fed food #2). The correct program output for this case is provided in cats.out.correct",'276,'91.74804688
'14,'Section header 27,"'Real Data Set: HCMST",'277,'88.57421875
'14,'Text 169,"'How Couples Meet and Stay Together (HCMST) is a study of how Americans meet their spouses and romantic partners.",'278,'91.55273438
'14,'Text 170,"'Want to try it out with real data from the How Couples Meet and Stay Together study?",'279,'80.76171875
'14,'Footer 15,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.htm",'280,'85.44921875
'14,'Page number 14,"'14/19",'281,'59.37500000
'15,'Header 27,"'9/3/24, 8:53 PM",'282,'79.24804688
'15,'Header 28,"'pl-stats",'283,'64.06250000
'15,'List 11,"",'284,'89.94140625
'15,'Text 171 - Part of List 11,"'1. Use the following wget link to download the data in tsv format: https://eecs280staff.github.io/p1-stats/data/HCMST_ver_3.04.tsv",'285,'96.24023438
'15,'Text 172 - Part of List 11,"'2. The variables in the study are the first line of the tsv file.",'286,'96.04492188
'15,'Text 173 - Part of List 11,"'3. Another file called the codebook describes the variables. It can be accessed here: https://stacks.stanford.edu/file/druid:ns183dp7831/HCMST_codebook_3_04.pdf",'287,'96.28906250
'15,'Section header 28,"'Overview",'288,'84.27734375
'15,'Text 174,"'Complete the code in two_sample.cpp to implement the two-sample analysis program. The starter code handles several tasks for you, including reading command-line arguments, reading data from an input file, and the high-level structure of the two-sample analysis. You should spend some time reading through the file to familiarize yourself with the provided code.",'289,'95.70312500
'15,'Text 175,"'You will need to implement the following functions in two_sample.cpp",'290,'87.45117188
'15,'List 12,"",'291,'92.67578125
'15,'Text 176 - Part of List 12,"'print_descriptive_stats() : Prints descriptive statistics for a given data set.",'292,'96.87500000
'15,'Text 177 - Part of List 12,"'mean_diff_sampling_distribution() : Returns an approximation of the sampling distribution of the difference in means between two groups, computed using bootstrap resampling.",'293,'95.94726563
'15,'Text 178 - Part of List 12,"'confidence_interval() : Returns a confidence interval for a given data set and interval width.",'294,'95.80078125
'15,'Text 179,"'Note the provided file contains // TODO comments and assert (false) ; placeholders for each function you need to implement. You should remove these as you complete each function. We have also provided // HINT comments with specific guidance.",'295,'95.41015625
'15,'Section header 29,"'Program Walkthrough",'296,'91.84570313
'15,'Text 180,"'Let's walk through complete example of the two-sample analysis program. First, we'll compile and run the program at the command line.",'297,'96.19140625
'15,'List 13,"",'298,'82.37304688
'15,'Text 181 - Part of List 13,"'1 $ make two_sample.exe",'299,'97.31445313
'15,'Text 182 - Part of List 13,"'2 $ ./two_sample.exe",'300,'96.28906250
'15,'Text 183,"'Next, let's walk through the program and its output, step-by-step.",'301,'94.18945313
'15,'Figure 16,"",'302,'50.58593750
'15,'Text 184,"'i Pro-tip: Note the spacing and formatting of the output in the example below. Your program should match this format exactly.",'303,'92.23632813
'15,'Text 185,"'The program starts in main() Since no command-line arguments are provided, the program defaults to using cats. CSV for the filename, food for the filter column, 1/2 for the A/B criteria, and weight for the data column. These are passed into the two_sample_analysis() function.",'304,'90.96679688
'15,'Footer 16,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.html",'305,'86.18164063
'15,'Page number 15,"'15/19",'306,'68.01757813
'16,'Header 29,"'9/3/24, 8:53 PM",'307,'58.59375000
'16,'Header 30,"'pl-stats",'308,'49.80468750
'16,'Text 186,"'The two_sample_analysis() function calls extract_columns ( ) to read from the input file, which prints an informational message.",'309,'95.75195313
'16,'Text 187,"'reading column food from cats.csv reading column weight from cats.csv",'310,'86.81640625
'16,'Text 188,"'It then filters into groups A and B. It prints a header for group A, calls your print_descriptive_stats() function on group A, and prints an extra blank line. Then it does the same for group B.",'311,'85.40039063
'16,'Table 5,"",'312,'29.83398438
'16,'Text 189,"'It then computes a 95% confidence interval for the difference in means between groups A and B by calling your mean_diff_sampling_distribution() and confidence_interval() functions. Then it prints a header and the confidence interval.",'313,'97.26562500
'16,'Text 190,"'Confidence interval for mean (weight | A) - mean (weight B) :",'314,'39.69726563
'16,'Footer 17,"'file:///home/runner/work/pl-stats/pl-stats/_site/index.html",'315,'82.66601563
'16,'Page number 16,"'16/19",'316,'77.68554688
'17,'Header 31,"'9/3/24, 8:53 PM",'317,'43.96972656
'17,'Header 32,"'p1-stats",'318,'41.21093750
'17,'Text 191,"'95% [-0.28, 1.2005]",'319,'26.90429688
'17,'Section header 30,"'Testing",'320,'72.85156250
'17,'Text 192,"'Ensure you've saved all files and compiled your most recent code.",'321,'95.89843750
'17,'Text 193,"'$ make two_sample.exe",'322,'81.44531250
'17,'Text 194,"'Run the program (which defaults to using the cats. sample data set) and save the output to a file with output redirection.",'323,'94.33593750
'17,'Text 195,"'$ ./two_sample.exe >cats.out",'324,'50.39062500
'17,'Text 196,"'Compare saved output ( cats. out ) with the instructor-provided correct output ( cats.out.correct If the diff command finishes with no output, that means the files are identical.",'325,'95.36132813
'17,'Text 197,"'$ diff cats. out cats.out.correct",'326,'81.44531250
'17,'Text 198,"'You may also open cats.out in your editor for manual inspection or use the cat command to print it at the terminal. (Note that it's simply a coincidence the command is also called cat .)",'327,'94.23828125
'17,'Text 199,"'You can also use the Makefile to run all tests.",'328,'75.29296875
'17,'Figure 17,"",'329,'27.58789063
'17,'Text 200,"'$ make test",'330,'65.67382813
'17,'Section header 31,"'Debugging",'331,'90.33203125
'17,'Text 201,"'Use your IDE's visual debugger to track down issues in your implementation of two_sample.cpp",'332,'93.11523438
'17,'Text 202,"'For example, if your printed descriptive statistics don't match, you might set a breakpoint shortly before the first mismatched line. Or, if the confidence interval is computed incorrectly, you can strategically set a breakpoint in-between various steps of the algorithm to check at which point something goes wrong.",'333,'95.11718750
'17,'Text 203,"'Here's a reminder of how to configure the debugger to launch the two-sample analysis program:",'334,'88.18359375
'17,'Table 6,"",'335,'48.14453125
'17,'Footer 18,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.html)",'336,'87.45117188
'17,'Page number 17,"'17/19",'337,'75.48828125
'18,'Header 33,"'9/3/24, 8:53 PM",'338,'80.61523438
'18,'Header 34,"'pl-stats",'339,'61.96289063
'18,'Table 7,"",'340,'95.11718750
'18,'Text 204,"'If you choose to run the program with custom command-line arguments, you'll need to configure them in your visual debugger (VS Code (macOS), VS Code (Windows), Xcode, Visual Studio). For example, for the HCMST example in the project introduction, you would use the following arguments: HCMST_ver_3.04.tsv q24_met_online 1 O ppage",'341,'96.38671875
'18,'Section header 32,"'Submission and Grading",'342,'88.33007813
'18,'Text 205,"'Submit stats.cpp stats_tests.cpp and two_sample.cpp to the autograder using this direct autograder link: https://autograder.io/web/project/2673.",'343,'93.11523438
'18,'Text 206,"'We will grade your code on functional correctness and the presence of test cases.",'344,'84.86328125
'18,'Section header 33,"'Testing",'345,'84.03320313
'18,'Text 207,"'Run all the public tests locally, including the public stats tests, your stats unit tests, and the two- sample analysis on the cats data set.",'346,'95.41015625
'18,'Text 208,"'$ make test",'347,'49.02343750
'18,'Section header 34,"'Requirements and Restrictions",'348,'50.39062500
'18,'Footer 19,"'file:///home/runner/work/pl-stats/p1-stats/_site/index.html",'349,'83.00781250
'18,'Page number 18,"'18/19",'350,'46.48437500
'19,'Header 35,"'9/3/24, 8:53 PM",'351,'66.79687500
'19,'Header 36,"'pl-stats",'352,'53.61328125
'19,'Text 209,"'Use only the provided bootstrap_resample( ) function declared in p1_library. . hpp to perform resampling with replacement and ensure you pass in the current 0-indexed iteration number - this is necessary to ensure consistent pseudorandom number generation for autograding purposes.",'353,'85.40039063
'19,'Section header 35,"'Acknowledgments",'354,'48.53515625
'19,'Text 210,"'The original project was written by Andrew DeOrio, Spring 2015. It was revised in Fall 2024 by James Juett and Amir Kamil.",'355,'90.86914063
'19,'Text 211,"'This project is based on research work by Rosenfeld, Michael J., Reuben J. Thomas, and Maja Falcon. 2015. How Couples Meet and Stay Together, Waves 1, 2, and 3: Public version 3.04, plus wave 4 supplement version 1.02 and wave 5 supplement version 1.0 [Computer files]. Stanford, CA: Stanford University Libraries.",'356,'92.43164063
'19,'Text 212,"'This document is licensed under a Creative Commons Attribution-NonCommercial 4.0 License. You're free to copy and share this document, but not to sell it. You may not share source code provided with this document.",'357,'88.13476563
'19,'Footer 20,"'file:///home/runner/work/p1-stats/pl-stats/_site/index.htm",'358,'92.82226563
'19,'Page number 19,"'19/19",'359,'83.34960938
